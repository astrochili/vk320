<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VK320</title>
    <link>http://astrochili.github.io/vk320/</link>
    <description>Recent content on VK320</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <copyright>&lt;a href=&#39;http://romansilin.com&#39; target=&#39;_blank&#39;&gt;Roman Silin&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 11 Apr 2016 14:52:00 +0300</lastBuildDate>
    <atom:link href="http://astrochili.github.io/vk320/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Базовая верстка</title>
      <link>http://astrochili.github.io/vk320/post/first-navigation/</link>
      <pubDate>Mon, 11 Apr 2016 14:52:00 +0300</pubDate>
      
      <guid>http://astrochili.github.io/vk320/post/first-navigation/</guid>
      <description>&lt;p&gt;Верстаю потихоньку с помощью &lt;a href=&#34;http://snapkit.io&#34;&gt;SnapKit&lt;/a&gt;. Все пишу кодом, Interface Builder пуст. Цвета и иконки черновые. Авторизация и базовая навигация работает, время заняться запросами данных с ВК для вывода друзей, аудиозаписей.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://astrochili.github.io/vk320/images/first-navigation.gif&#34; alt=&#34;Gif&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Концепт редизайна</title>
      <link>http://astrochili.github.io/vk320/post/design-concept/</link>
      <pubDate>Fri, 08 Apr 2016 12:25:00 +0300</pubDate>
      
      <guid>http://astrochili.github.io/vk320/post/design-concept/</guid>
      <description>&lt;p&gt;Полтора года назад &lt;a href=&#34;https://vk.com/hawkens&#34;&gt;Илья Гарифулин&lt;/a&gt; составил концепт редизайна VK320. Большое ему спасибо за проделанную работу! На ее основе будет построена новая версия, с поправками под функционал. Из существенного - загрузки уйдут на отдельную страницу, а под списком профилей появятся табы &amp;ldquo;Избранное&amp;rdquo;, &amp;ldquo;Друзья&amp;rdquo; (+поиск по пользователями), &amp;ldquo;Сообщества&amp;rdquo; (+поиск по сообществам). На картинке, собственно, тот самый концепт.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://astrochili.github.io/vk320/images/design-concept.jpg&#34; alt=&#34;Концепт дизайна от Ильи Гарифулина&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Структура классов</title>
      <link>http://astrochili.github.io/vk320/post/first-structure/</link>
      <pubDate>Wed, 06 Apr 2016 23:53:00 +0300</pubDate>
      
      <guid>http://astrochili.github.io/vk320/post/first-structure/</guid>
      <description>&lt;p&gt;Я реализовал небольшую структуру в виде двух синглтон-менеджеров, трех классов модели, одного главного вью-контроллера и отдельных контроллеров, отвечающих за различные блоки UI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://astrochili.github.io/vk320/images/first-structure.jpg&#34; alt=&#34;Скриншот Xcode&#34; /&gt;&lt;/p&gt;

&lt;p&gt;VKManager - черный ящик что на входе принимает запросы, а на выходе выдает массивы данных из ВК. Внутри себя разбирается с авторизацией, кешированием и сериализацией JSON. Единственная зависимость с внешним миром - это обращение в WebView, т.е. открытие/закрытие браузера внутри программы для авторизации на сайте ВК и одобрения прав приложению.&lt;/p&gt;

&lt;p&gt;DownloadsManager - собственно тот, кто будет отвечать за текущий список загрузок, их очередь, состояние, разрешение ошибок, сохранение или кеширование файлов и т.п.&lt;/p&gt;

&lt;p&gt;Owner, Track, Playlist - база данных, построенная на Realm (realm.io). Помимо использования в рамках онлайн сессии, будет играть роль локального кэша метаданных из социальной сети для возможности навигации по избранным контактам и аудиозаписям в оффлайн-режиме.&lt;/p&gt;

&lt;p&gt;MasterVC - главный ViewController, который будет управлять &amp;ldquo;сверху&amp;rdquo; другими блоками интерфейса. Из основных задач - это первоначальная иницилизация всей верстки интерфейса и ее динамическое изменение. Все остальные классы UI (PlayerView, NavigationView, TracksView и т.д.) будут выполнять роль контроллеров в рамках своей зоны ответственности.&lt;/p&gt;

&lt;p&gt;В общем ничего сложного по структуре пока нет. Скорее всего, она даже не разрастется более чем в полтора раза. Предвижу пару менеджеров и дюжину кастомных NSView и NSTableRowView.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Сначала настроим XCGLogger</title>
      <link>http://astrochili.github.io/vk320/post/xcglogger-setup/</link>
      <pubDate>Sat, 02 Apr 2016 12:08:00 +0300</pubDate>
      
      <guid>http://astrochili.github.io/vk320/post/xcglogger-setup/</guid>
      <description>&lt;p&gt;На старте было решено определиться со списком фреймворков, которые так или иначе будут использованы в приложении. Был потрачен целый день на подборку и сравнение именно тех, которые мне подходят: исключительно Swift, поддержка OS X и подключение через CocoaPods. Все они перечислены в папке Pods на скриншоте, а кейсы их использования будут описаны по мере возникновения.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://git.io/PpvIyg&#34;&gt;XCGLogger&lt;/a&gt; - отличный фреймворк, предназначенный для гибкой системы ведения лога с возможностью настройки уровней, цветов, формата сообщений и вывода в файл. Обычно лог используется для текущего дебага, но не меньшую пользу он принесет при анализе баг-репортов от пользователей. В старой версии VK320 напрочь отсутствовало ведение лога даже со стандартным NSLog, теперь есть желание это исправить.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://astrochili.github.io/vk320/images/xcglogger-setup.jpg&#34; alt=&#34;Код настроки XCGLogger&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Фактически, на скриншоте первый код новой версии VK320 на Swift, в котором происходит настройка логгера при старте приложения. Подобрал подходящую палитру цветов сообщений, вроде выглядит симпатично :)&lt;/p&gt;

&lt;p&gt;Если вдруг кому информация показалась банальной, в следующий раз компенсирую обзором архитектуры приложения, классов и их ответственности в VK320.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VK320 на Swift</title>
      <link>http://astrochili.github.io/vk320/post/vk320-on-swift/</link>
      <pubDate>Sat, 26 Mar 2016 11:26:00 +0300</pubDate>
      
      <guid>http://astrochili.github.io/vk320/post/vk320-on-swift/</guid>
      <description>&lt;p&gt;А что если попробовать переписать все с нуля? На Swift? На 300% функциональнее, удобнее и красивей?&lt;/p&gt;

&lt;p&gt;Изначально VK320 был написан в рамках образовательной практики и знакомства с Objective-C. После завершения этого &amp;ldquo;знакомства&amp;rdquo; и выхода первых стабильных версий достаточно предсказуемо возникли проблемы с дальнейшей поддержкой и совершенствованием приложения.&lt;/p&gt;

&lt;p&gt;Сейчас я решил поближе познакомиться с языком программирования Swift и в качестве практического проекта тут не может не выступить VK320, который давненько требует рефакторинга на корню и допила 100500 крутых функций, предложенных пользователями. На основе опыта разработки текущей версии VK320 и огромного TODO-листа можно сделать уже весьма продуманный и качественный продукт на Swift.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>О приложении</title>
      <link>http://astrochili.github.io/vk320/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://astrochili.github.io/vk320/about/</guid>
      <description>&lt;p&gt;Приложение для прослушивания и скачивания музыки из ВКонтакте на Mac с OS X 10.9-10.11.&lt;/p&gt;

&lt;p&gt;Публичная версия 0.2.7 доступна на странице GitHub: &lt;a href=&#34;https://git.io/v8OLL&#34;&gt;git.io/v8OLL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Новая версия с редизайном и вагоном функций сейчас в процессе разработки с нуля на Swift, вступайте в группу чтобы следить за прогрессом.&lt;/p&gt;

&lt;p&gt;Позволяет найти аудиозапись в лучшем качестве 320Kbps, предварительно послушать и сохранить ее на компьютер. Идеально подойдет для тех, кому важно качество скачиваемой аудиозаписи, ну и конечно, для всех желающих послушать музыку без открытия браузера.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>